name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: amazing-sunset-409005
  PROJECT_NUMBER: 256431776024

  CLUSTER: clouddemo-linux
  CLUSTER_ZONE: us-central1-a

  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1

  IMAGE: nest-image

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      #
      # Authenticate to Google Cloud using workload identity federation
      #
      - id: 'auth'
        name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v0'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
          service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Connect to Artifact Registry
        run: |-
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev
      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ env.CLUSTER_ZONE }}

      #
      # Build the Docker image and push it to Artifact Registry
      #
      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Print image tag
        run: echo ${{ env.IMAGE_TAG }}

      - name: Lock image version in deployment.yaml
        run: sed -i 's|NEST_IMAGE|${{ env.IMAGE_TAG }}|g' ./deployment.yaml

      - name: Build Docker image
        run: docker build --tag "${{ env.IMAGE_TAG }}" .

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"

      #
      # Deploy to GKE
      #
      - name : Print Files
        run: cat ./deployment.yaml

      - name: Deploy to GKE
        run: kubectl apply -f ./deployment.yaml

      - name: fetch manifest repository
        uses: actions/checkout@v3
        with:
          repository: seongyunlee/argocd-example-apps
          token: ${{ secrets.git }}
          path:  helm-guestbook
          fetch-depth: 1
      
      - name: check repo
        run: |
          echo $GITHUB_SHA
          git branch
          ls -al

      - name: update manifest file image tag
        run: |
          yq e -i '.image.tag |= "$GITHUB_SHA"' './helm-guestbook/values.yml'

      - name: setup Repository
        working-directory: manifest-repo
        run: |
          git fetch origin master
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url --push origin https://github.com/***/manifest-repo.git
          git checkout -b release-${{ github.sha }}

      - name: commit
        working-directory: manifest-repo
        run: |
          git add .
          git commit -m "Release bff-admin"
          git push origin HEAD
      - name: create PR
        working-directory: manifest-repo
        run: |
          gh pr create -B master -H release-${{ github.sha }} -t "deploy-${{ github.sha }}" -b ""